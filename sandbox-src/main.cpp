/*
 * Project generated by Templater
 * Argore 2024
 */

#include <stdio.h>
#include <iostream>
#include "Client/cClient.h"

int main()
{
	
	cClient client;

	client.create( 8000 );
	
	uAddressCode external_code = client.getExternalIP();
	printf( "local code: %i\n", external_code.c );

	uAddressCode asd;
	printf( "a: %i\n", asd.c );

	std::string code;
	printf( "Code: " );
	std::cin >> code;
	try
	{
		uAddressCode code_union;	
		code_union.c = std::stoi( code );

		client.connect( code_union.dump().c_str(), 8000);
	}
	catch ( ... ) { }

	while ( client.m_connected_addr == 0 )
		Sleep( 10 );

	Sleep( 5000 );

	
	// send dummy trade
	{
		std::vector<int> items = { 15, 0x0a, 0, };
		int buffer_size = items.size() * sizeof( int ) + 4;
		char* buffer = new char[ buffer_size ];
		buffer[ 0 ] = PacketType_Message;
		buffer[ 1 ] = 2; // MessageType_TradeData;
		buffer[ 2 ] = 0; // padding
		buffer[ 3 ] = 0;
		memcpy( buffer + 4, items.data(), buffer_size - 4 );

		printf( "sending: " );
		for ( int i = 0; i < items.size(); i++ )
			printf( "%02x ", items[ i ] );
		printf( "\n" );
		client.sendData( buffer, buffer_size );
		delete[] buffer;
	}

	while ( 1 ) 
		Sleep( 100 );

	return 0;
}

